import asyncio
from typing import Dict
from prometheus_client import Gauge, Counter, start_http_server

class HealthMonitor:
    def __init__(self):
        self.metrics = {
            'drone_status': Gauge('drone_status', 'Drone connection status', ['drone_id']),
            'cpu_usage': Gauge('cpu_usage', 'CPU usage percent'),
            'detection_latency': Gauge('detection_latency', 'Face detection latency'),
            'comms_errors': Counter('comms_errors', 'Communication errors')
        }
        start_http_server(8001)

    async def update_drone_status(self, drone_id: str, status: int):
        """Update drone health status"""
        self.metrics['drone_status'].labels(drone_id).set(status)

    async def log_detection_time(self, latency_ms: float):
        """Log detection processing time"""
        self.metrics['detection_latency'].set(latency_ms)